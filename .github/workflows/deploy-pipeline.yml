name: Deploy Pipeline

on:
  push:
  workflow_dispatch:
  repository_dispatch:
    types: [content-updated]

jobs:
  # ESLint + Prettier
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Environment Setup
        uses: ./.github/actions/setup

      - name: Run Lint
        run: pnpm lint

  # TypeScript Check
  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Environment Setup
        uses: ./.github/actions/setup

      - name: Run Typecheck
        run: pnpm typecheck

  build:
    needs: [lint, typecheck]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout external content
        uses: actions/checkout@v4
        with:
          repository: riceball-tw/weweweb
          ref: main
          path: src/content/
          token: ${{ secrets.CHECKOUT_GITHUB_CONTENT_PAT }}
          lfs: true

      - name: Environment Setup
        uses: ./.github/actions/setup

      - name: Create LFS file list
        run: git lfs ls-files --long | cut -d ' ' -f1 | sort > .lfs-assets-id

      - name: LFS Cache
        uses: actions/cache@v3
        with:
          path: .git/lfs/objects
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
          restore-keys: |
            ${{ runner.os }}-lfs-

      - name: Git LFS Pull
        run: git lfs pull

      - name: Build
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  lighthouse:
    needs: [build]
    runs-on: ubuntu-latest
    env:
      LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Environment Setup
        uses: ./.github/actions/setup

      - name: Run Lighthouse CI
        env:
          LHCI_TOKEN: ${{ secrets.LHCI_TOKEN }}
        run: pnpm dlx @lhci/cli@0.14.x autorun

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Environment Setup
        uses: ./.github/actions/setup

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish
        uses: cloudflare/wrangler-action@v3.14.1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          command: pages deploy --branch=${{ github.ref_name }}

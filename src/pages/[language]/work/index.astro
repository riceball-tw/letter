---
import { getCollection } from 'astro:content';
import Base from '@/layouts/Base.astro';
import Banner from '@/components/Banner.astro';

import { localeParams, useTranslations, type LanguageKey } from '@/i18n/i18n.ts';

const currentLocale = Astro.currentLocale as LanguageKey;
const t = useTranslations(currentLocale);

const projects = await getCollection('project', ({ data }) => !data.draft);
const localeRelatedProjects = projects.filter(project => project.id.startsWith(currentLocale));
const sortedProjects = localeRelatedProjects.sort((a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime());

export const getStaticPaths = () => localeParams;
---

<Base title={t('Navbar-3')}>
  <div class="p-4 md:p-8">
    <main class="min-h-screen">
      <Banner>
        <h1 class="text-3xl md:text-5xl font-medium">{t('Work-1')}<br />{t('Work-2')}</h1>
      </Banner>

      <section class="container mx-auto">
        <h2 class="sr-only">{t('Work-3', {number: `${projects.length}`})}</h2>

        <ul class="grid md:grid-cols-2 grid-cols-1 gap-8">
     

          {
            sortedProjects.map((project, index) => {
              const imagesInsideView = 2;
              return (
                <li class="relative overflow-hidden">
                  {
                    project.data.isWorkInProgress && (
                      <div class="absolute top-0 right-0 z-[--z-index-work-ribbon]">
                        <div class="w-32 h-8 absolute top-4 -right-8">
                          <div class="h-full w-full text-primary-800 bg-accent tracking-widest text-center text-current leading-8 font-semibold transform rotate-45">{t('Work-4')}</div>
                        </div>
                      </div>
                    )
                  }  
                  <div style="--thumbnailWidth: 720px; --thumbnailHeight: 540px;" class="relative max-w-[--thumbnailWidth] max-h-[--thumbnailHeight] before:animate-pulse before:bg-primary-100 before:border-transparent before:inset-0 before:absolute before:rounded-lg">
                  {project.data.video ? (
                    <video
                      style="aspect-ratio: 4 / 3;"
                      class="mb-6 rounded-lg z-[--z-index-work-thumbnail] relative"
                      width="720"
                      height="540"
                      autoplay
                      loop
                      muted
                      playsinline
                      poster={project.data.thumbnail.src}
                    >
                      {project.data.video.map((source) => (
                        <source src={source.src} type={source.type} />
                      ))}
                    </video>
                  ) : (
              
                      <img
                        loading={index >= imagesInsideView ? 'lazy' : 'eager'}
                        class="w-full mb-6 rounded-lg z-[--z-index-work-thumbnail] relative"
                        width="720"
                        height="540"
                        src={project.data.thumbnail.src}
                        alt={project.data.thumbnail.alt}
                        />
                      )}
                      </div>

                  <h3 class="mb-4 text-lg font-medium">
                    {project.data.link ? (
                      <a href={project.data.link.url}>{project.data.title}</a>
                    ) : (
                      project.data.title
                    )}

                    <time class="opacity-60"> - {project.data.publishDate.getFullYear()}</time>
                  </h3>

                  <p class="text-lg mb-4">{project.data.description}</p>

                  <div class="flex flex-wrap items-center justify-between gap-4">
                    {project.data.tech && (
                      <ul class="hidden lg:flex flex-wrap gap-2 xl:w-1/2 w-auto">
                        {project.data.tech.map((tech) => (
                          <li class="border-2 py-1 md:py-2 px-2 md:px-4 border-primary-50 rounded-full text-sm">
                            {tech}
                          </li>
                        ))}
                      </ul>
                    )}

                    {project.data.link && (
                      <ul class="flex gap-4 ">
                        {project.data.link.sourceCodeUrl && (
                          <li>
                            <a class="flex gap-2 hover:bg-primary-100 rounded-full transition-colors p-4 ml-0 lg:-ml-4" href={project.data.link.sourceCodeUrl}>
                              <img
                                class="object-contain"
                                width="20"
                                height="20"
                                src="/assets/global/github.svg"
                                alt="GitHub Logo"
                              />
                              {t('Work-5')}
                            </a>
                          </li>
                        )}
                        {project.data.link.url && (
                          <li>
                            <a class="flex gap-2 hover:bg-primary-100 rounded-full transition-colors p-4 ml-0 lg:-ml-4" href={project.data.link.url}>
                              <img
                                width="20"
                                height="20"
                                src="/assets/global/open-new.svg"
                                alt={t('Work-6')}
                              />
                              {t('Work-7')}
                            </a>
                          </li>
                        )}
                      </ul>
                    )}
                  </div>
                </li>
              );
            })
          }
        </ul>
      </section>
    </main>
  </div>
</Base>
